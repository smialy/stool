import { EventController, StreamController } from './controller';
import { IStream } from './interfaces';
import { Stream } from './stream';
export { Stream, StreamController, EventController, };
export declare function fromItem(input: any): IStream<unknown> | undefined;
export declare function fromFunction<T>(subscriber: (controller: StreamController<T>) => void): IStream<T>;
export declare function fromObservable<T>(input: any): IStream<T>;
export declare function fromArray<T>(array: ArrayLike<T>): IStream<unknown>;
export declare function fromPromise<T>(promise: Promise<T>): IStream<unknown>;
export declare function fromIterator<T>(items: Iterable<T>): IStream<unknown>;
export declare function fromEvents(element: HTMLElement, eventName: string): IStream<unknown>;
